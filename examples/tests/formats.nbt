# fmt_decimal
assert_eq(fmt_decimal(1), "1")
assert_eq(fmt_decimal(0.1), "0.1")
assert_eq(fmt_decimal(0.000001), "0.000001")
assert_eq(fmt_decimal(0.0000000000000001), "0.0000000000000001")


assert_eq(fmt_decimal(1 m), "1 m")
assert_eq(fmt_decimal(0.1 m), "0.1 m")
assert_eq(fmt_decimal(0.000001 m), "0.000001 m")
assert_eq(fmt_decimal(0.0000000000000001 m), "0.0000000000000001 m")

assert_eq(fmt_decimal(1),                     "1")
assert_eq(fmt_decimal(1_000),                 "1000")
assert_eq(fmt_decimal(1_000_000),             "1000000")
assert_eq(fmt_decimal(1_000_000_000),         "1000000000")
assert_eq(fmt_decimal(1_000_000_000_000),     "1000000000000")
assert_eq(fmt_decimal(1_000_000_000_000_000), "1000000000000000")

assert_eq(fmt_decimal(1 m),                     "1 m")
assert_eq(fmt_decimal(1_000 m),                 "1000 m")
assert_eq(fmt_decimal(1_000_000 m),             "1000000 m")
assert_eq(fmt_decimal(1_000_000_000 m),         "1000000000 m")
assert_eq(fmt_decimal(1_000_000_000_000 m),     "1000000000000 m")
assert_eq(fmt_decimal(1_000_000_000_000_000 m), "1000000000000000 m")



# fmt_science
assert_eq(fmt_science(1), "1.0e+0")

assert_eq(fmt_science(1 m), "1.0e+0 m")

assert_eq(fmt_science(1e1),  "1.0e+1")
assert_eq(fmt_science(1e5),  "1.0e+5")
assert_eq(fmt_science(1e7),  "1.0e+7")
assert_eq(fmt_science(1e14), "1.0e+14")

assert_eq(fmt_science(1e1 m),  "1.0e+1 m")
assert_eq(fmt_science(1e5 m),  "1.0e+5 m")
assert_eq(fmt_science(1e7 m),  "1.0e+7 m")
assert_eq(fmt_science(1e14 m), "1.0e+14 m")

assert_eq(fmt_science(-1e1),  "-1.0e+1")
assert_eq(fmt_science(-1e5),  "-1.0e+5")
assert_eq(fmt_science(-1e7),  "-1.0e+7")
assert_eq(fmt_science(-1e14), "-1.0e+14")

assert_eq(fmt_science(1e-1),  "1.0e-1")
assert_eq(fmt_science(1e-5),  "1.0e-5")
assert_eq(fmt_science(1e-7),  "1.0e-7")
assert_eq(fmt_science(1e-14), "1.0e-14")

assert_eq(fmt_science(1234),  "1.234e+3")
assert_eq(fmt_science(1.234),  "1.234e+0")
assert_eq(fmt_science(0.01234),  "1.234e-2")



# fmt_improper_fraction
assert_eq(fmt_improper_fraction(1), "1/1")

assert_eq(fmt_improper_fraction(1/2), "1/2")
assert_eq(fmt_improper_fraction(2/4), "1/2")
assert_eq(fmt_improper_fraction(100/200), "1/2")

assert_eq(fmt_improper_fraction(-1/2), "-1/2")
assert_eq(fmt_improper_fraction(-2/4), "-1/2")
assert_eq(fmt_improper_fraction(-100/200), "-1/2")

assert_eq(fmt_improper_fraction(1/3), "1/3")
assert_eq(fmt_improper_fraction(2/5), "2/5")
assert_eq(fmt_improper_fraction(3/7), "3/7")
assert_eq(fmt_improper_fraction(4/11), "4/11")

assert_eq(fmt_improper_fraction(4/2), "2/1")
assert_eq(fmt_improper_fraction(6/4), "3/2")
assert_eq(fmt_improper_fraction(400/200), "2/1")



# fmt_fraction